2,"…azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;","…meghatározhatjuk az átlagosan a rendszerben egyidejűleg tartózkodó kérések számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;","…ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;","a) …ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet, a válaszidő esetleges változásától függően."
3,"… felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása","b) … felhasználhatjuk a Zipf törvényt, mert fordított arányosságot feltételez a válaszidő és a kihasználtság közt;","…benchmarkokat használhatunk a teljesítménytesztek kiváltására","d) …benchmarkokat használhatunk arra, hogy egy rendszer áteresztőképességét becsüljük adott felhasználószám mellett"
4,"a) … biztosan bejárjuk az összes lehetséges lefutási utat;","b) …olyan rendszer tulajdonságait is tudjuk vizsgálni, amely még nem készült el;","c) …funkcionális és nemfunkcionális követelmények ellenőrzésére is lehetőségünk van;","d) …tulajdonképp kísérleteket hajtunk végre egy matematikai modell fölött."
5,"a) …különbség, hogy a teljesítménymodell tipikusan átlagos értéket vagy általános korlátot ad meg, a szimulációval viszont egyes lefutási esetek is vizsgálhatóak;","…hasonlóság, hogy mindkettő eredményét célszerű utólag, a valós rendszeren végzett mérésekkel ellenőrizni;","…különbség, hogy szimulációval nem lehet kölcsönös kizárást (szűkös erőforrásokat) figyelembe venni","…különbség, hogy a teljesítménymodell matematikai formulákkal közelíti a rendszer viselkedését, míg szimuláció semmilyen információt nem veszít a valós viselkedéshez képest."
6,"a) …és a deadlock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem.","b) …egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.","c) …jólstrukturált folyamatban nem fordulhat elő.","d) …előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni."
7,"a) …deklaratív, ha nem írja le az előállítás módját, csak az elvárt kimeneteket.","b) …akkor nevezhető formálisnak, ha többféle értelmezése is lehetséges.","c) … teljesítmény jellegű elvárásokat nem írhat le, csak az előállítandó eredményt.","d) …néha egy megelőző fejlesztési lépés eredménye, amelyet egy még magasabb szintű specifikáció implementációjának tekintettünk."
8,"a) …csak programkódot vagy belőle származtatott modellt lehet.","b) …modellek közül csak a végrehajthatóakat lehet.","a) …funkcionális és nem funkcionális követelményeket is lehet.","d) …csak specifikáció vagy követelmények ismeretében lehet."
9,"a) …az orákulum egy olyan gép, program vagy mechanizmus, melynek feladata a kapott kimenet vizsgálata a specifikáció vagy követelmények szempontjából.","b) …a referencia egy olyan gép, program vagy mechanizmus, melynek feladata a kapott kimenet vizsgálata a specifikáció vagy követelmények szempontjából.","c) …mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer.","d) …nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek."
10,"a) …annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét futtatjuk.","b) …csak egyetlen tesztesetre számítható.","c) …lehetséges értelmezései közül a 100%-os átmenet fedettség mindig 100%-os állapotfedést is eredményez.","d) …lehetséges értelmezései közül a 100%-os átmenet fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk."
