Időbélyeg;Pontszám;"1.	Egyensúlyi helyzetben lévő rendszer teljesítménymodellje esetén ";"2.	Egy folyamat átbocsátási rátája…";"3.	A Little-törvény alkalmazásakor";"4.	Egy rendszer teljesítményének (kapacitásának) tervezésekor";"5.	A deadlock vagy holtpont";"1.	A tesztelés során";"7.	A tesztfedettség";"8.	Egy folytonos változó jellemző értékeit doboz diagrammal (boxplottal) és hisztogrammal is ábrázoljuk.";"9.	A kódgenerátor";"10.	Egy numerikus változó 99 adatpontból számított középértékei közül"
5.17.2017 10:05:50;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 10:28:53;0;;;;;;;;;;
5.17.2017 10:44:26;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 11:07:20;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";"b) felhasználhatjuk a Zipf törvényt, mert fordított arányosságot feltételez a válaszidő és a kihasználtság közt;, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség";b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., c) lehet nagyobb, mint 1, ha a folyamatban van ciklus.;b) A boxplotról mindig közvetlenül leolvasható a 40. percentilis, a) A boxplotról mindig közvetlenül leolvasható a módusz.;d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 11:21:23;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 11:34:41;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 11:50:16;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 11:52:31;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 12:03:12;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 12:25:06;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, d) lehet egyszerre több módusz érték
5.17.2017 12:29:22;0;;;;;;;;;;
5.17.2017 12:29:44;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 12:42:54;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 12:48:54;0;;;;;;;;;;
5.17.2017 12:49:30;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 12:54:13;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, d) lehet egyszerre több módusz érték
5.17.2017 12:59:06;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 13:00:06;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;a) abban különbözik a fordítóprogramoktól, hogy hatékonyabb programot eredményez., c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián
5.17.2017 13:11:33;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 13:11:33;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 13:13:19;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték
5.17.2017 13:16:35;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 13:19:26;0;;;;;;;;;;
5.17.2017 13:33:05;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 13:43:16;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;;a) abban különbözik a fordítóprogramoktól, hogy hatékonyabb programot eredményez., b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 13:45:36;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 13:57:16;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 13:59:23;0;;;;;;;;;;
5.17.2017 14:00:18;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 14:02:03;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 14:02:11;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 14:09:55;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 14:24:31;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 14:44:51;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;a) abban különbözik a fordítóprogramoktól, hogy hatékonyabb programot eredményez., b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, d) lehet egyszerre több módusz érték
5.17.2017 14:50:32;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 14:54:00;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 14:55:12;0;;;;;;;;;;
5.17.2017 14:58:09;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 15:10:28;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 15:10:52;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 15:19:17;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, d) lehet egyszerre több módusz érték
5.17.2017 15:32:46;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 15:40:23;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 15:54:13;0;;;;;;;;;;
5.17.2017 15:57:29;0;;;;;;;;;;
5.17.2017 15:58:53;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:02:05;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:07:00;0;;;;;;;;;;
5.17.2017 16:07:44;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:13:03;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték
5.17.2017 16:13:12;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:26:36;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:29:01;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:38:13;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:39:09;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:40:48;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:40:55;0;;;;;;;;;;
5.17.2017 16:41:18;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;;a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:49:32;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:51:18;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 16:59:37;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 17:01:14;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;
5.17.2017 17:10:22;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 17:21:37;0;;;;;;;;;;
5.17.2017 17:22:23;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 17:27:51;0;;;;;;;;;;
5.17.2017 17:32:31;0;;;;;;;;;;
5.17.2017 17:35:55;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 17:52:13;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 17:53:57;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 17:54:53;0;;;;;;;;;;
5.17.2017 17:56:17;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:03:08;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható a módusz., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:08:20;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:10:34;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:11:21;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:12:50;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:13:21;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 18:13:43;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:37:54;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:41:24;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:48:50;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";"b) felhasználhatjuk a Zipf törvényt, mert fordított arányosságot feltételez a válaszidő és a kihasználtság közt;";a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 18:50:58;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:02:49;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:03:55;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:05:03;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., b) A boxplotról mindig közvetlenül leolvasható a 40. percentilis;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:09:20;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:11:22;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:12:44;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:14:06;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:27:47;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:30:10;0;;;;;;;;;;
5.17.2017 19:30:23;0;a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:30:31;0;;;;;;;;;;
5.17.2017 19:31:07;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:36:34;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:41:41;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 19:46:52;0;a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:47:31;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 19:52:07;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:00:04;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:01:31;0;a) az érkezési ráta meghaladhatja az átbocsátóképességet, b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:02:50;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:04:02;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:07:36;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:08:59;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:15:47;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:17:36;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:25:25;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;d) lehet egyszerre több módusz érték
5.17.2017 20:28:50;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:30:44;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:30:50;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:35:48;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:46:36;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:49:18;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:51:05;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:52:40;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;a) abban különbözik a fordítóprogramoktól, hogy hatékonyabb programot eredményez., c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 20:53:21;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 20:58:39;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:04:44;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:08:32;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 21:13:58;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:17:57;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:18:12;0;;;;;;;;;;
5.17.2017 21:22:38;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:24:41;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:27:59;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;b) …mindig nagyobb vagy egyenlő a vizitációs számnál, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:28:19;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:28:26;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:41:20;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";"a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, b) felhasználhatjuk a Zipf törvényt, mert fordított arányosságot feltételez a válaszidő és a kihasználtság közt;";a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:44:14;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";"a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, b) felhasználhatjuk a Zipf törvényt, mert fordított arányosságot feltételez a válaszidő és a kihasználtság közt;, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség";a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, d) lehet egyszerre több módusz érték
5.17.2017 21:45:47;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:49:21;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:51:59;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 21:58:22;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:02:34;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:05:58;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., b) A boxplotról mindig közvetlenül leolvasható a 40. percentilis;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:06:25;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 22:08:58;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:12:37;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték, d) lehet egyszerre több módusz érték
5.17.2017 22:16:15;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:17:24;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:17:46;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.17.2017 22:20:27;0;a) az érkezési ráta meghaladhatja az átbocsátóképességet;c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;;;c) lehet nagyobb, mint 1, ha a folyamatban van ciklus.;;c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián
5.17.2017 22:24:18;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:29:13;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:29:23;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:32:20;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:33:58;0;c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;;;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:35:57;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:43:45;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:50:00;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:50:14;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:52:17;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:53:16;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték
5.17.2017 22:54:54;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:56:38;0;a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:57:03;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:57:52;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 22:59:31;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:06:07;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:07:34;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;c) lehet egyszerre több medián érték
5.17.2017 23:08:38;0;a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:10:05;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték
5.17.2017 23:11:30;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:13:32;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:13:34;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., b) A boxplotról mindig közvetlenül leolvasható a 40. percentilis, a) A boxplotról mindig közvetlenül leolvasható a módusz.;d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:24:20;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:24:30;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:27:45;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:27:49;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:29:27;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:29:55;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:32:32;0;a) az érkezési ráta meghaladhatja az átbocsátóképességet, b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:41:31;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:45:46;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:46:34;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:49:43;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:52:06;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:52:59;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.17.2017 23:56:09;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték
5.17.2017 23:59:19;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:00:08;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:00:17;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:03:18;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:03:52;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:06:26;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.18.2017 0:07:42;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték, d) lehet egyszerre több módusz érték
5.18.2017 0:09:59;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:12:22;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:15:55;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";"b) felhasználhatjuk a Zipf törvényt, mert fordított arányosságot feltételez a válaszidő és a kihasználtság közt;, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség";a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.18.2017 0:16:27;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:17:28;0;;a) …nemnegatív;;;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:20:10;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:20:45;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;b) A boxplotról mindig közvetlenül leolvasható a 40. percentilis;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:24:26;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:26:01;0;a) az érkezési ráta meghaladhatja az átbocsátóképességet, b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:34:29;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:38:09;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:41:13;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:47:38;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:57:44;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 0:58:26;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 1:04:52;0;;;;;;;;;;
5.18.2017 1:08:38;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 1:18:41;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 1:24:26;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 1:26:08;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;c) lehet egyszerre több medián érték
5.18.2017 1:38:43;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 1:47:35;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 1:54:46;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;a) abban különbözik a fordítóprogramoktól, hogy hatékonyabb programot eredményez., b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 1:57:24;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 2:19:40;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 2:22:52;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 2:30:37;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 2:34:22;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték
5.18.2017 2:35:53;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 2:44:55;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 3:11:43;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, d) lehet egyszerre több módusz érték
5.18.2017 3:29:54;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 3:57:39;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;;b) inputja lehet szöveges szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 3:58:40;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, d) lehet egyszerre több módusz érték
5.18.2017 4:01:42;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 4:13:44;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 4:56:55;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 4:58:46;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 5:53:58;0;;;;;;;;;;
5.18.2017 6:40:32;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 6:48:04;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 6:48:18;0;;;;;;;;;;
5.18.2017 7:07:01;0;a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:19:15;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:22:01;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:28:02;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:31:02;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:31:09;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:46:21;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:52:12;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:53:42;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:53:55;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 7:59:05;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:00:08;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:00:39;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:03:50;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:05:40;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:06:07;0;;;;;;;;;;
5.18.2017 8:07:48;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:10:04;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:10:31;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:11:43;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, d) lehet egyszerre több módusz érték
5.18.2017 8:12:03;0;a) az érkezési ráta meghaladhatja az átbocsátóképességet, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:13:36;0;;;;;;;;;;
5.18.2017 8:16:15;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";"b) felhasználhatjuk a Zipf törvényt, mert fordított arányosságot feltételez a válaszidő és a kihasználtság közt;, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség";a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:20:35;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:20:41;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:21:06;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:22:03;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, c) lehet egyszerre több medián érték, d) lehet egyszerre több módusz érték
5.18.2017 8:22:31;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:27:28;0;;;;;;;;;;
5.18.2017 8:29:30;0;;;;;;;;;;
5.18.2017 8:29:31;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., c) lehet nagyobb, mint 1, ha a folyamatban van ciklus.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:29:48;0;a) az érkezési ráta meghaladhatja az átbocsátóképességet, b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:32:21;0;;;;;;;;;;
5.18.2017 8:33:23;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;b) mindig elég a tesztbemeneteket megadni, hiszen a kimeneteket úgy is kiszámítja a tesztelt rendszer., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:36:40;0;;;;;;;;;;
5.18.2017 8:37:30;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:37:56;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:38:35;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:39:01;0;;;;;;;;;;
5.18.2017 8:48:05;0;a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:49:23;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:49:58;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:53:38;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:57:03;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:57:09;0;;;;;;;;;;
5.18.2017 8:58:26;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 8:58:50;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:01:27;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:04:08;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:05:45;0;;;;;;;;;;
5.18.2017 9:10:40;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:21:19;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:25:01;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;
5.18.2017 9:25:56;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:28:35;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:31:29;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;";d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., d) előállhat úgy, hogy egy olyan ciklusba lépünk be, amelynek a kilépési feltétele sose fog teljesülni.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., b) csak egyetlen tesztesetre számítható.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:32:03;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:33:55;0;;;;;;;;;;
5.18.2017 9:40:14;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:42:01;0;;;;;;;;;;
5.18.2017 9:46:24;0;;;;;;;;;;
5.18.2017 9:47:19;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek., d) nem módosítjuk a rendszermodellt, ezért számít statikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:49:33;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., a) A boxplotról mindig közvetlenül leolvasható a módusz.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:49:45;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki., a) lehetséges értelmezései közül a 100%-os átmenet/utasítás fedettség azt is jelenti, hogy minden lehetséges bemenetsorozatot leteszteltünk.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 9:58:40;0;;;;;;;;;;
5.18.2017 10:02:44;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, b) …mindig nagyobb vagy egyenlő a vizitációs számnál, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.18.2017 10:07:40;0;;;;;;;;;;
5.18.2017 10:09:32;0;;;;;;;;;;
5.22.2017 23:58:10;0;c) az átbocsátási ráta és az átbocsátóképesség mindig megegyezik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;";;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell.;
5.23.2017 0:04:27;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;a) …nemnegatív, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel., c) teljesen specifikált és jólstrukturált folyamatban nem fordulhat elő.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.23.2017 17:38:14;0;;;;;;;;;;
5.23.2017 20:44:12;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik, a Little-törvény fennáll;b) …mindig nagyobb vagy egyenlő a vizitációs számnál, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;;a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) a medián lehet nagyobb, mint a módusz, d) lehet egyszerre több módusz érték
5.23.2017 21:05:37;0;b) időegységenként átlagosan annyi folyamatpéldány indul, mint ahány befejeződik;a) …nemnegatív, c) …kisebb vagy egyenlő az átbocsátóképességnél, d) …egyensúlyi helyzetben megegyezik az érkezési rátával;"azt feltételezzük, hogy a beérkezési ráta nem nagyobb, mint az átbocsátóképesség;, meghatározhatjuk az a rendszerben egyidejűleg tartózkodó kérések átlagos számát, a valóságban azonban ez időnként ennél nagyobb értéket is felvehet;, ha a rendszerben töltött idő azonos átbocsátás mellett nő, akkor nagyobb N (átlagos átlapolódási fok) értékre számítunk;, d) ha az átbocsátás csökken, attól a rendszerben kiszolgálás alatt lévő kérések száma nőhet is, a válaszidő esetleges változásától függően.";a) felhasználhatjuk a Zipf törvényt cache tervezésre, mert segítségével megadható, mekkora terhelést jelent a leggyakoribb kérések kiszolgálása, c) gyakran alkalmazott egyszerűsítő feltételezés, hogy az elvégzendő munkamennyiség (összes foglaltsági idő) a terheléssel (beérkező kérések száma) arányos, d) gyakran alkalmazott egyszerűsítő feltételezés, hogy a kapacitással (erőforráspéldányok számával) arányos az átbocsátóképesség;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;c) végrehajtjuk a rendszert vagy a modelljét ill. szimuláljuk a működését, ezért számít dinamikus ellenőrzésnek.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián, a) a medián lehet nagyobb, mint a módusz
5.24.2017 5:39:53;0;;;;;;;;;;
5.24.2017 8:38:52;0;a) az érkezési ráta meghaladhatja az átbocsátóképességet, a Little-törvény fennáll;a) …nemnegatív;;;a) és a livelock között fontos különbség, hogy a livelockban történhet állapotváltozás, míg a deadlockban nem., b) egy olyan állapot, amelyből a rendszer a modellezett inputok és események hatására nem képes kilépni, legfeljebb külső (a modellen túlmutató) segítséggel.;a) a tesztbemenenet egy olyan gép, program vagy mechanizmus, melynek feladata a kapott input vizsgálata a specifikáció vagy követelmények szempontjából.;a) annak mértéke, hogy a teszteléskor a modell vagy szoftver mekkora részét próbáljuk ki.;a) A boxplotról mindig közvetlenül leolvasható az első kvartilis., d) Minden információ, ami a doboz diagramról könnyen leolvasható, a hisztogramról is könnyen leolvasható, emiatt tekintjük a doboz diagramot a hisztogram egyfajta absztrakciójának.;b) inputja lehet szöveges szintaxissal adott modell., c) inputja lehet grafikus szintaxissal adott modell., d) outputja lehet egy program forráskódja mint szövegfájl.;a) az átlag lehet nagyobb, mint a medián
